<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>THETA 360 Developers Unofficial Blog</title>
    <description>Tips and technical for developers on using the RICOH THETA S 360 degree camera. Code examples and guides are available.
</description>
    <link>http://theta360developers.github.io/blog/</link>
    <atom:link href="http://theta360developers.github.io/blog/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 23 Feb 2016 06:31:19 -0800</pubDate>
    <lastBuildDate>Tue, 23 Feb 2016 06:31:19 -0800</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>Remote Shutter for THETA S Using ESP8266</title>
        <description>&lt;p&gt;The main idea for this post
&lt;a href=&quot;https://developers.theta360.com/en/forums/viewtopic.php?f=4&amp;amp;t=120&amp;amp;p=1408#p1389&quot;&gt;originally appeared&lt;/a&gt;
in the RICOH Developers Forum. Thanks to Rune Kyndal for building his awesome remote control and posting
it in the forum. Rune was also kind enough to point us to the original code from
Katsuya-san, which opened up a range of possibilities for the community to
hack ESP8266 boards to control the THETA S 360 camera. I have extended Rune’s post with general information
on ESP8266 boards and more information on the projects from Katsuya-san,
the original author of the code for the ESP8266 project.&lt;/p&gt;

&lt;h2 id=&quot;what-is-an-esp8266-and-why-should-i-care&quot;&gt;What is an ESP8266 and Why Should I Care?&lt;/h2&gt;
&lt;p&gt;If you search on the Internet, you’ll quickly learn that the ESP8266 is a small WiFi module that cost between $6 and $15, with a typical price of $10 for the module with
accessories built on the dev board such as breadboard breakout pins, LED monitoring
lights, and flash. Most of the easrly excitement around the ESP8266 dealt
with adding WiFi support to Arduino boards. However, as $10 (and cheaper)
ESP8266 boards have a MCU, flash, and bootloader, people have been running
the $10 boards standalone with a battery.&lt;/p&gt;

&lt;p&gt;For projects with the THETA S, the ESP8266 can connect to the THETA S
using WiFi, then send HTTP commands directly to the THETA to take
pictures and control the camera.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/2016-02/remote_2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It’s quite a cool little project and quite gratifying to press a remote button
and hear the THETA S shutter chirp. :-)&lt;/p&gt;

&lt;p&gt;Join in and share your THETA project.&lt;/p&gt;

&lt;h2 id=&quot;rune-kyndals-completed-controller-for-the-theta-s&quot;&gt;Rune Kyndal’s Completed Controller for the THETA S&lt;/h2&gt;
&lt;p&gt;From Rune Kyndal
Hi Guys..
I just finished building a handy little remote shutter for my THETA S camera and
thought I would share&lt;/p&gt;

&lt;p&gt;I’m using
&lt;a href=&quot;https://github.com/katsuya-san/ESP8266-THETA-S-SimpleRemoteControler&quot;&gt;Katsuya Yamamoto’s ESP8266 “simple remote” code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;the only change i did to the code was to swap the I/O around to make it work with the
I/O available on the smaller ESP-01 board&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;const int buttonPin = 0;
const int led2Pin = 2;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I used a small Lipo battery and charger circuit. built the required ESP-01 circuit straight on to the 2x4 header.
and stuffed inside a cheap 9v battery case
(patent pending ugly hotglue birds-nest style)&lt;/p&gt;

&lt;p&gt;but she works&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/1644351/theta-remote/IMG_3581.JPG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/1644351/theta-remote/IMG_3590.JPG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://dl.dropboxusercontent.com/u/1644351/theta-remote/IMG_3591.JPG&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;thoughts. I’m using a AMS1117 3.3v LDO between the ESP and the li-po cell. not sure how well
that will work when the voltage drops..&lt;/p&gt;

&lt;p&gt;oh.. and get a nicer shutter button.. 20 cent one.. not quite up to par ;)&lt;/p&gt;

&lt;p&gt;Update:
Maybe I will draw up a quick “Pseudo” schematic.. not much to it though.
just an ESP-01 board a 3.3v LDO, 3 resistors. 2 leds. 1 button,
1 battery charger circuit board + battery, stuffed in a case.&lt;/p&gt;

&lt;h2 id=&quot;katsuya-sans-esp8266-theta-s-remote-controller&quot;&gt;Katsuya-san’s ESP8266 THETA S Remote Controller&lt;/h2&gt;
&lt;p&gt;Information below added by Craig.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/katsuya-san&quot;&gt;Katsuya-san&lt;/a&gt; developed two remote control units
for the THETA S. One verion has a single button control and one version has full
controller features. Both versions are based on the
&lt;a href=&quot;https://www.switch-science.com/catalog/2500/&quot;&gt;Switch Science ESP-WROOM-02&lt;/a&gt;
 development board. Although it looks like this board may only be available in
 Japan, other 8266 boards are available globally. People in the US
 should be able to source parts from places like &lt;a href=&quot;https://www.adafruit.com/&quot;&gt;Adafruit&lt;/a&gt;
 &lt;a href=&quot;https://www.sparkfun.com/&quot;&gt;SparkFun&lt;/a&gt;. Although I have not checked their
 parts, the you may be able to find components at places like
 &lt;a href=&quot;http://www.digikey.com/&quot;&gt;Digi-Key&lt;/a&gt; and
 &lt;a href=&quot;http://www.mouser.com/&quot;&gt;Mouser Electronics&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/katsuya-san/ESP8266-THETA-S-SimpleRemoteControler&quot;&gt;RICOH THETA S Simple Remote Controller ESP8266 GitHub source code and information&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/katsuya-san/ESP8266-THETA-S-FullRemoteControler&quot;&gt;RICOH THETA S Full Remote Controller&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pictures from
&lt;a href=&quot;https://github.com/katsuya-san&quot;&gt;Katsuya-san&lt;/a&gt;, the original author of the code.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/2016-02/case2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/2016-02/remote_control_case.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/2016-02/simple_remote.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;general-esp8266-information&quot;&gt;General ESP8266 Information&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.esp8266.com/wiki/doku.php?id=esp8266-module-family&quot;&gt;ESP8266 Community Wiki&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sparkfun.com/products/13678&quot;&gt;SparkFun WiFi Module ESP8266&lt;/a&gt; $6.95&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.adafruit.com/products/2471&quot;&gt;Adafruit HUZZAH ESP8266 Breakout&lt;/a&gt; $9.95 - currently sold out&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.adafruit.com/products/2821&quot;&gt;Adafruit Feather HUZZAH with ESP8266 WiFi&lt;/a&gt; $15.95 - currently sold out&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.sparkfun.com/products/13711&quot;&gt;SparkFun esp8266 Thing Dev Board&lt;/a&gt; $15.95&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 22 Feb 2016 00:00:00 -0800</pubDate>
        <link>http://theta360developers.github.io/blog/applications/2016/02/22/remote-shutter.html</link>
        <guid isPermaLink="true">http://theta360developers.github.io/blog/applications/2016/02/22/remote-shutter.html</guid>
        
        
        <category>Applications</category>
        
      </item>
    
      <item>
        <title>List of RICOH THETA Apps</title>
        <description>&lt;script&gt;
  (function(i,s,o,g,r,a,m){i[&#39;GoogleAnalyticsObject&#39;]=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,&#39;script&#39;,&#39;//www.google-analytics.com/analytics.js&#39;,&#39;ga&#39;);

  ga(&#39;create&#39;, &#39;UA-73311422-1&#39;, &#39;auto&#39;);
  ga(&#39;send&#39;, &#39;pageview&#39;);

&lt;/script&gt;

&lt;p&gt;This list was produced by &lt;a href=&quot;https://www.facebook.com/groups/RicohTHETAUsers/&quot;&gt;RICOH THETA Facebook Group&lt;/a&gt; community member Fabio Penna.&lt;/p&gt;

&lt;h1 id=&quot;desktop-computer-programs&quot;&gt;Desktop Computer programs&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://theta360.com/en/support/download/&quot;&gt;Theta Official&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://hugin.sourceforge.net/&quot;&gt;Hugin&lt;/a&gt;
for straightening images on a computer - See Carl Bennett turorial in the &lt;a href=&quot;https://www.facebook.com/notes/ricoh-theta-users-on-facebook/straightening-360-images-using-hugin/1616917718526418&quot;&gt;documents area&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.krpano.com/&quot;&gt;KR Pano&lt;/a&gt; tool for pictures and vídeos&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.kolor.com/panotour/&quot;&gt;Kolor panotour&lt;/a&gt; to create tours&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.easypano.com/&quot;&gt;EasyPano&lt;/a&gt; Similar to Kolor&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.ptgui.com&quot;&gt;PTGui&lt;/a&gt; tool for straightening panos and posting panos&lt;br /&gt;
 Dennis Mabrey says, “While PTGui is a great tool it’s primary purpose is for stitching multiple images into a pano.”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://ggnome.com&quot;&gt;Pano2VR&lt;/a&gt; tool for straightening panos and creating tour&lt;br /&gt;
Dennis Mabrey says, “PanoVR (at least beta ver 5) will perform automatic straightening of Theta/Theta S images. You don’t have to run the stills through the Ricoh software.&lt;br /&gt;
PanoVR also is great for things like tripod removal or fixing images. You can select a portion of the image and edit in Photoshop and perform functions like content aware fill. Really makes getting rid of the tripod or the ‘giant hand’ very useful.”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.tshsoft.com/en/panostudio_index&quot;&gt;PanoramaStudio 3&lt;/a&gt; Photo stitching and pano postwork. Save to flash or HTML5&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;online-programs&quot;&gt;Online Programs&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.holobuilder.com/index.html&quot;&gt;HoloBuilder&lt;/a&gt; Complete tour tool and totally FREE - From our friend Fabian Fabian&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.spinattic.com/&quot;&gt;Spinattic&lt;/a&gt; Free tour creation tool, with social network integrated&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.youvisit.com/&quot;&gt;You Visit&lt;/a&gt; Similar to HoloBuilder, with free and paid plans&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://round.me/&quot;&gt;Round.me&lt;/a&gt; Free tour creation tool, with social network integrated&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.mapillary.com/map&quot;&gt;Mapillary&lt;/a&gt; Free street tour creation tool, with social network integrated - Wiff IOS and Android Apps&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.marzipano.net/tool/&quot;&gt;Marzipano&lt;/a&gt; For self panorama host&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;mobile-applications&quot;&gt;Mobile Applications&lt;/h1&gt;

&lt;h2 id=&quot;ricoh-theta-for-cameras-before-s&quot;&gt;Ricoh Theta (For cameras before S)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.theta&quot;&gt;Android&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/ricoh-theta/id667238484?mt=8&quot;&gt;iOS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ricoh-theta-s&quot;&gt;Ricoh Theta S&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.theta360&quot;&gt;Android&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/ricoh-theta-s/id102325474&quot;&gt;iOS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;theta-theta-editor-post-on-instagram---developed-by-ricoh&quot;&gt;Theta+ (Theta editor, post on Instagram - Developed by Ricoh)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details&quot;&gt;Android&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/theta+/id1021526610?mt=8&quot;&gt;iOs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;theta-hdr-to-take-hdr-pictures&quot;&gt;Theta HDR (To take HDR Pictures)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=air.de.pl.ThetaHDRApp&quot;&gt;Android&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.teapps.thetahdr&quot;&gt;Android Option 2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/hdr-360-bracket-pro-for-ricoh/id987157511?mt=8&quot;&gt;iOS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;theta-action--motion-pictures&quot;&gt;Theta Action + (Motion pictures)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=jp.sciencecow.thetaactionplus&quot;&gt;Android&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;vr-panorama-viewer-to-see-panos-in-google-cardboard-vr---from-our-friend-shawn-ames&quot;&gt;VR Panorama Viewer (To see panos in Google Cardboard VR - From our friend Shawn Ames)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.Viral3D.VRPanoViewer&quot;&gt;Android&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tao360-another-cardboard-viewer&quot;&gt;Tao360 another cardboard viewer&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=jp.co.taosoftware.android.sphericalviewer&quot;&gt;Android&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;spherecamhttpsitunesapplecomusappspherecamid973550273mt8&quot;&gt;&lt;a href=&quot;https://itunes.apple.com/us/app/spherecam/id973550273?mt=8&quot;&gt;SphereCam&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;(Remote controller for Ricoh THETA m15/Ricoh THETA S, has tvOS version can let user view image/Video on Apple TV. Apple watch support)&lt;/p&gt;

&lt;h2 id=&quot;koloreyes-for-viewing-360-video-withwithout-cardboard&quot;&gt;kolorEyes for viewing 360 video with/without cardboard&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=fi.finwe.koloreyesandroid&quot;&gt;Android&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;theta-transfer-for-copying-the-full-size-images&quot;&gt;Theta Transfer for copying the full size images&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.hirota41.thetatransfer&quot;&gt;Android&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;theta-converter-for-straightening-images&quot;&gt;Theta Converter for straightening images&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.hirota41.thetaconverter&quot;&gt;Android&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;holo360uploader-app-to-upload-and-share-theta-shots-works-with-holobuilder---see-it-on-the-online-programs-section&quot;&gt;Holo360Uploader (App to upload and share Theta shots, Works with HoloBuilder - See it on the online programs section)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=com.bitstars.panouploader&quot;&gt;Android&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 20 Jan 2016 00:00:00 -0800</pubDate>
        <link>http://theta360developers.github.io/blog/applications/2016/01/20/list-of-theta-apps.html</link>
        <guid isPermaLink="true">http://theta360developers.github.io/blog/applications/2016/01/20/list-of-theta-apps.html</guid>
        
        
        <category>Applications</category>
        
      </item>
    
      <item>
        <title>RICOH THETA S Won&#39;t Boot - FIXED</title>
        <description>&lt;p&gt;I was able to unbrick my RICOH THETA S, and I’m sharing some of my results here.&lt;/p&gt;

&lt;h2 id=&quot;background&quot;&gt;Background&lt;/h2&gt;

&lt;p&gt;I was running the RICOH THETA app version 2.0.0. This version has a known bug with the firmware upgrade. Unfortunately, I was unaware of this. I updated my firmware through the MacOS X RICOH THETA app to 1.21. Soon thereafter, my RICOH THETA S would not boot up. All of the blue lights on the front would blink, then a red light would come on, and a triple bee-bee-beep would happen, and it would shut down in about 3-5 seconds. Over and over.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/2016-01/theta_blinking.jpg&quot; alt=&quot;THETA with all lights blinking blue&quot; /&gt;&lt;/p&gt;

&lt;p&gt;First I thought it was not charged. I tried charging, but the red charging light would only stay on for about 20 seconds, maybe a little longer.&lt;/p&gt;

&lt;p&gt;Then I began imagining I had dropped it or something, maybe it was actually broken. But seeing these posts here and talking with codetricity, I realized it was bricked. If I could update the firmware, maybe we could get it to boot up again.&lt;/p&gt;

&lt;h2 id=&quot;steps-to-fix&quot;&gt;Steps to fix&lt;/h2&gt;

&lt;h3 id=&quot;first-step&quot;&gt;First step&lt;/h3&gt;

&lt;p&gt;Press and hold wifi button on the side and the shutter button on the front. While holding them, press the power button. Mine booted, with a front red light coming on (I think), and with the front wifi, video and LIVE blue lights blinking continuously.&lt;/p&gt;

&lt;h3 id=&quot;second-step&quot;&gt;Second step&lt;/h3&gt;

&lt;p&gt;Press and hold the wifi and shutter buttons, and DO NOT press power. Attach to the Mac while holding the two buttons down. (Yes, this is cumbersome.) I then connected to my MacOS X Macbook Air via USB and made sure I could see it as an attached device.&lt;/p&gt;

&lt;p&gt;If Photos comes up automatically, that may be an issue. Go into Photos, under the Import tab, unclick Open Photos for this device. Then unplug and plug back in.&lt;/p&gt;

&lt;p&gt;If you see the RICOH THETA as a device, it’ll show up in Finder as RICODCX. Also, the front red light on the camera stays on continuously at this point (I think). Double click to open RICODCX. There should be two files, DCIM and MISC. Delete both. I believe this gets rid of a corrupted file. I do not know this for a fact, though.&lt;/p&gt;

&lt;h3 id=&quot;third-step&quot;&gt;Third Step&lt;/h3&gt;

&lt;p&gt;Unplug, turn off, and then reattach to the Mac while holding the wifi and shutter buttons down at the same time.&lt;/p&gt;

&lt;p&gt;At some point here, under RICOH THETA please check for newest version and update the RICOH THETA app to 2.0.1.&lt;/p&gt;

&lt;h3 id=&quot;final-step&quot;&gt;Final step&lt;/h3&gt;

&lt;p&gt;Now, in the RICOH THETA app, under File, run Firmware Update. Here’s the interesting part. I went through the firmware update. If the camera is not connected (or not connected properly) you will get an error message. I was nicely connected at this point.&lt;/p&gt;

&lt;p&gt;The updater told me I was already running 1.21 and the newest version is the same version, 1.21, therefore no need to update. This felt like a dead end. But try ignoring this. I thought it would not upgrade or reinstall the firmware, but… after unplugging and restarting, my RICOH THETA S is healthy. Attaches to iPhone, takes pictures, everything.&lt;/p&gt;

&lt;p&gt;Good luck!&lt;/p&gt;
</description>
        <pubDate>Wed, 20 Jan 2016 00:00:00 -0800</pubDate>
        <link>http://theta360developers.github.io/blog/camera/2016/01/20/fixing-bricked-theta.html</link>
        <guid isPermaLink="true">http://theta360developers.github.io/blog/camera/2016/01/20/fixing-bricked-theta.html</guid>
        
        
        <category>Camera</category>
        
      </item>
    
      <item>
        <title>Using RICOH THETA Live View With Unity</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://tips.hecomi.com/about&quot;&gt;hecomi&lt;/a&gt; recently wrote an &lt;a href=&quot;http://tips.hecomi.com/entry/2015/10/11/211456&quot;&gt;interesting blog post&lt;/a&gt; using Unity to view realtime 360 degree video streaming. I personally have very little experience with Unity, but the content and pictures were useful, so I translated the blog post for others to use. This is not an exact translation, but it should be much more clear than doing Google translate.&lt;/p&gt;

&lt;p&gt;I noticed GOROman (&lt;a href=&quot;https://twitter.com/GOROman&quot;&gt;@GOROman&lt;/a&gt;) tweeting about the info below, so I decided to try it myself right then and there.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/GOROman/status/645896791469068288?ref_src=twsrc%5Etfw&quot;&gt;@GOROman tweet&lt;/a&gt;: You should be able to easily build a live VR stream from this. Stitching might be an issue… For the time being, it might be fine to just connect the sphere to the UV texture.&lt;/p&gt;

&lt;p&gt;The THETA S is a 360 degree camera that will be going on sale October 23rd, and it includes features that were not included in the m15 like Dual-Eye Fisheye streaming over USB (1280x720 15fps) and HDMI streaming (1920x1080 30fps). In order to view this using Unity, I made a an appropriately UV developed sphere and a shader appropriate to AlphaBlend border. Ultimately, for the purpose of making a full sphere with the THETA S, it would be much higher quality and more convenient (can use Skybox too!) to use the fragment shader, made by Nora (&lt;a href=&quot;https://twitter.com/stereoarts&quot;&gt;@Stereoarts&lt;/a&gt;, which directly writes Equirectangular onto a plane.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stereoarts.jp/&quot;&gt;Stereoarts Homepage&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/Stereoarts/status/647737666520248321?ref_src=twsrc%5Etfw&quot;&gt;@Stereoarts tweet&lt;/a&gt;: I’ve released a Theta Shader Pack. A shader for converting THETA / THETA S full sphere video to Enquirectangular in Unity and supporting scripts. &lt;a href=&quot;stereoarts.jp/ThetaShaderPack_20150926.zip&quot;&gt;stereoarts.jp/ThetaShaderPack_20150926.zip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For this article, I wanted to jot down my techniques as well.&lt;/p&gt;

&lt;p&gt;Sample&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://dl.dropboxusercontent.com/u/7131835/Programs/ThetaS_LiveView_Sample.unitypackage&quot;&gt;ThetaS_LiveView_Sample.unitypackage @ Dropbox&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Example of taking a video with THETA&lt;/p&gt;

&lt;p&gt;When taking a video with m15, the circles overlapped. The THETA S gives beautifully separated spheres. The angle covered in one sphere is slightly larger than 180 degrees.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/2015-12/dual-fish-eye.jpg&quot; alt=&quot;dual fish eye image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/2015-12/dual-fisheye-tripod.jpg&quot; alt=&quot;dual fish eye image with tripod&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In doing this, I’ve made an adjustment using sample texture, which Goroman filmed using WebCamTexture.&lt;/p&gt;

&lt;p&gt;Making a sphere with good UV setting&lt;/p&gt;

&lt;p&gt;Working with Maya LT, the UV comes out like this, if you make a normal sphere.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/2015-12/MayaLT-UV-mapping.png&quot; alt=&quot;Maya LT UV Mapping&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It would look like below, if you make a plane with the UV.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/2015-12/MayaLT-UV-mapping-2.png&quot; alt=&quot;Maya LT UV Mapping 2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;All it needs is to be cut in half and be moved appropriately.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/2015-12/MayaLT-UV-mapping-3.png&quot; alt=&quot;Maya LT UV Mapping 3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/2015-12/MayaLT-UV-mapping-4.png&quot; alt=&quot;Maya LT UV Mapping 4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It looks like this. (I did not adjust it, so it might be slightly off.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/2015-12/crescent-moon.png&quot; alt=&quot;Crescent Moon image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Actually, I wanted to use alphablend for the border, so I used 2 overlapping half spheres instead of one sphere. The UV border is adequately stretched manually.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/2015-12/overlapping.png&quot; alt=&quot;Overlapping&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Incidentally, surface is set to face inward, by reversing all normal vectors. UV position and size are fine to adjust later with shader.&lt;/p&gt;

&lt;p&gt;Setting with Unity&lt;/p&gt;

&lt;p&gt;Import the Maya LT built model with Unity, and put the camera in the center. Write a shader, so the model’s UV position can be adjusted or can alphablend. In order to control the drawing order and to prevent the border from changing at certain orientations, each half sphere has a different shader.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Shader &quot;Theta/Sphere1&quot; {
    Properties {
        _MainTex (&quot;Base (RGB)&quot;, 2D) = &quot;white&quot; {}
        _AlphaBlendTex (&quot;Alpha Blend (RGBA)&quot;, 2D) = &quot;white&quot; {}
        _OffsetU (&quot;Offset U&quot;, Range(-0.5, 0.5)) = 0
        _OffsetV (&quot;Offset V&quot;, Range(-0.5, 0.5)) = 0
        _ScaleU (&quot;Scale U&quot;, Range(0.8, 1.2)) = 1
        _ScaleV (&quot;Scale V&quot;, Range(0.8, 1.2)) = 1
        _ScaleCenterU (&quot;Scale Center U&quot;, Range(0.0, 1.0)) = 0
        _ScaleCenterV (&quot;Scale Center V&quot;, Range(0.0, 1.0)) = 0
    }
    SubShader {
        Tags { &quot;RenderType&quot; = &quot;Transparent&quot; &quot;Queue&quot; = &quot;Background&quot; }
        Pass {
            Name &quot;BASE&quot;

            Blend SrcAlpha OneMinusSrcAlpha
            Lighting Off
            ZWrite Off

            CGPROGRAM
            #pragma vertex vert_img
            #pragma fragment frag

            #include &quot;UnityCG.cginc&quot;

            uniform sampler2D _MainTex;
            uniform sampler2D _AlphaBlendTex;
            uniform float _OffsetU;
            uniform float _OffsetV;
            uniform float _ScaleU;
            uniform float _ScaleV;
            uniform float _ScaleCenterU;
            uniform float _ScaleCenterV;

            float4 frag(v2f_img i) : COLOR {
                // 中心位置や大きさを微調整
                float2 uvCenter = float2(_ScaleCenterU, _ScaleCenterV);
                float2 uvOffset = float2(_OffsetU, _OffsetV);
                float2 uvScale = float2(_ScaleU, _ScaleV);
                float2 uv =  (i.uv - uvCenter) * uvScale + uvCenter + uvOffset;
                // アルファブレンド用のテクスチャを参照してアルファを調整
                float4 tex = tex2D(_MainTex, uv);
                tex.a *= pow(1.0 - tex2D(_AlphaBlendTex, i.uv).a, 2);
                return tex;
            }
            ENDCG
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here’s a second section of code.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	Shader &quot;Theta/Sphere2&quot; {
	    Properties {
	        _MainTex (&quot;Base (RGB)&quot;, 2D) = &quot;white&quot; {}
	        _AlphaBlendTex (&quot;Alpha Blend (RGBA)&quot;, 2D) = &quot;white&quot; {}
	        _OffsetU (&quot;Offset U&quot;, Range(-0.5, 0.5)) = 0
	        _OffsetV (&quot;Offset V&quot;, Range(-0.5, 0.5)) = 0
	        _ScaleU (&quot;Scale U&quot;, Range(0.8, 1.2)) = 1
	        _ScaleV (&quot;Scale V&quot;, Range(0.8, 1.2)) = 1
	        _ScaleCenterU (&quot;Scale Center U&quot;, Range(0.0, 1.0)) = 0
	        _ScaleCenterV (&quot;Scale Center V&quot;, Range(0.0, 1.0)) = 0
	    }
	    SubShader {
	        Tags { &quot;RenderType&quot; = &quot;Transparent&quot; &quot;Queue&quot; = &quot;Background+1&quot; }
	        UsePass &quot;Theta/Sphere1/BASE&quot;
	    }
	}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As below, for alphablend, have a texture made, that is alpha adjusted to UV. I made adjustment for perfectly fit, by exporting UV with postscript and reading with illustrator (white circle inside is alpha=1; around the circle, from inside to outside, changes from 1 to 0; outside will not be used so whatever fits.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/2015-12/two-circles.png&quot; alt=&quot;Two Circles&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then, adjust the parameters and you’ve got a whole sphere.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/2015-12/parameters.png&quot; alt=&quot;Parameters&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/2015-12/sphere-unity.png&quot; alt=&quot;Unity Sphere&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/2015-12/realtime-stitching.png&quot; alt=&quot;Realtime Stitching&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Changing into Equirectangular&lt;/p&gt;

&lt;p&gt;I tried it with a modified vertex shader.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Shader &quot;Theta/Equirectangular1&quot; {
    Properties {
        _MainTex (&quot;Base (RGB)&quot;, 2D) = &quot;white&quot; {}
        _AlphaBlendTex (&quot;Alpha Blend (RGBA)&quot;, 2D) = &quot;white&quot; {}
        _OffsetU (&quot;Offset U&quot;, Range(-0.5, 0.5)) = 0
        _OffsetV (&quot;Offset V&quot;, Range(-0.5, 0.5)) = 0
        _ScaleU (&quot;Scale U&quot;, Range(0.8, 1.2)) = 1
        _ScaleV (&quot;Scale V&quot;, Range(0.8, 1.2)) = 1
        _ScaleCenterU (&quot;Scale Center U&quot;, Range(0.0, 1.0)) = 0
        _ScaleCenterV (&quot;Scale Center V&quot;, Range(0.0, 1.0)) = 0
        _Aspect (&quot;Aspect&quot;, Float) = 1.777777777
    }
    SubShader {
        Tags { &quot;RenderType&quot; = &quot;Transparent&quot; &quot;Queue&quot; = &quot;Background&quot; }
        Pass {
            Name &quot;BASE&quot;

            Blend SrcAlpha OneMinusSrcAlpha
            Lighting Off
            ZWrite Off

            CGPROGRAM
            #pragma vertex vert
            #pragma fragment frag
            #define PI 3.1415925358979

            #include &quot;UnityCG.cginc&quot;

            uniform sampler2D _MainTex;
            uniform sampler2D _AlphaBlendTex;
            uniform float _OffsetU;
            uniform float _OffsetV;
            uniform float _ScaleU;
            uniform float _ScaleV;
            uniform float _ScaleCenterU;
            uniform float _ScaleCenterV;
            uniform float _Aspect;

            struct v2f {
                float4 position : SV_POSITION;
                float2 uv       : TEXCOORD0;
            };

            v2f vert(appdata_base v) {
                float4 modelBase = mul(_Object2World, float4(0, 0, 0, 1));
                float4 modelVert = mul(_Object2World, v.vertex);

                float x = modelVert.x;
                float y = modelVert.y;
                float z = modelVert.z;

                float r = sqrt(x*x + y*y + z*z);
                x /= 2 * r;
                y /= 2 * r;
                z /= 2 * r;

                float latitude  = atan2(0.5, -y);
                float longitude = atan2(x, z);  

                float ex = longitude / (2 * PI);
                float ey = (latitude - PI / 2) / PI * 2;
                float ez = 0;

                ex *= _Aspect;

                modelVert = float4(float3(ex, ey, ez) * 2 * r, 1);

                v2f o;
                o.position = mul(UNITY_MATRIX_VP, modelVert);
                o.uv       = MultiplyUV(UNITY_MATRIX_TEXTURE0, v.texcoord);
                return o;
            }    

            float4 frag(v2f i) : COLOR {
                float2 uvCenter = float2(_ScaleCenterU, _ScaleCenterV);
                float2 uvOffset = float2(_OffsetU, _OffsetV);
                float2 uvScale = float2(_ScaleU, _ScaleV);
                float2 uv =  (i.uv - uvCenter) * uvScale + uvCenter + uvOffset;
                float4 tex = tex2D(_MainTex, uv);
                tex.a *= pow(1.0 - tex2D(_AlphaBlendTex, i.uv).a, 2);
                return tex;
            }
            ENDCG
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here’s a second section of code.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Shader &quot;Theta/Equirectangular2&quot; {
    Properties {
        _MainTex (&quot;Base (RGB)&quot;, 2D) = &quot;white&quot; {}
        _AlphaBlendTex (&quot;Alpha Blend (RGBA)&quot;, 2D) = &quot;white&quot; {}
        _OffsetU (&quot;Offset U&quot;, Range(-0.5, 0.5)) = 0
        _OffsetV (&quot;Offset V&quot;, Range(-0.5, 0.5)) = 0
        _ScaleU (&quot;Scale U&quot;, Range(0.8, 1.2)) = 1
        _ScaleV (&quot;Scale V&quot;, Range(0.8, 1.2)) = 1
        _ScaleCenterU (&quot;Scale Center U&quot;, Range(0.0, 1.0)) = 0
        _ScaleCenterV (&quot;Scale Center V&quot;, Range(0.0, 1.0)) = 0
        _Aspect (&quot;Aspect&quot;, Float) = 1.777777777
    }
    SubShader {
        Tags { &quot;RenderType&quot; = &quot;Transparent&quot; &quot;Queue&quot; = &quot;Background+1&quot; }
        UsePass &quot;Theta/Equirectangular1/BASE&quot;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/2015-12/results.png&quot; alt=&quot;Results&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When taking a look at the mesh, it moves around like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/2015-12/results-mesh.png&quot; alt=&quot;Results Mesh&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Because polygon did not fit, there is a blank space in the corner. This could have been avoided if we have used a direct fragment shader like Nora.&lt;/p&gt;

&lt;p&gt;Conclusion&lt;/p&gt;

&lt;p&gt;It looks like there’s the possibility of multiple fun topics here like spherical AR and Stabilization. After the THETA S goes on sale, I would love to play with it more.&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Dec 2015 00:00:00 -0800</pubDate>
        <link>http://theta360developers.github.io/blog/unity/2015/12/17/Using-RICOH-Live-View-With-Unity.html</link>
        <guid isPermaLink="true">http://theta360developers.github.io/blog/unity/2015/12/17/Using-RICOH-Live-View-With-Unity.html</guid>
        
        
        <category>Unity</category>
        
      </item>
    
      <item>
        <title>Using Node.js with the RICOH THETA S</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://qiita.com/FePlus&quot;&gt;Satoru Yamada&lt;/a&gt; recently wrote a
&lt;a href=&quot;http://qiita.com/FePlus/items/aaeca40468d49786e2f5&quot;&gt;blog post describing how to access the RICOH THETA S with
node.js&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Since I’ve been trying to test the THETA API with JavaScript,
I spent a few minutes to translate his main points into
English.&lt;/p&gt;

&lt;p&gt;I’ll start off Satoru’s code snippet. The rest of the text
is also from him, including the summary, which includes an
interesting idea about NFC tags to help with automation.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var fs = require(&#39;fs&#39;);
var OscClientClass = require(&#39;osc-client&#39;).OscClient;

var domain = &#39;192.168.1.1&#39;;
var port = &#39;80&#39;;
var client = new OscClientClass(domain, port);
var sessionId;
var filename;

client.startSession().then(function(res){
  sessionId = res.body.results.sessionId;
  return client.takePicture(sessionId);
  })

.then(function (res) {
  var pictureUri = res.body.results.fileUri;
  console.log(&#39;pictureUri :%s&#39;,pictureUri);

  var path = pictureUri.split(&#39;/&#39;);
  filename = path.pop();
  return client.getImage(pictureUri);
})
.then(function(res){
  var imgData = res.body;
  fs.writeFile(filename,imgData);
  return client.closeSession(sessionId);
});
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;By running the &lt;code class=&quot;highlighter-rouge&quot;&gt;node theta.js&lt;/code&gt;, you can view the &lt;code class=&quot;highlighter-rouge&quot;&gt;fileUri&lt;/code&gt;
of the picture that you previously took.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node theta.js
pictureUri :100RICOH/R0010009.JPG
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The file will be created in the directory where you executed
the command.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/img/2015-12/directory_screenshot.png&quot; alt=&quot;Directory with file&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The IP address and port are described in the &lt;a href=&quot;https://developers.theta360.com/en/docs/v2/api_reference/&quot;&gt;API reference&lt;/a&gt;.
With a P2P connection, only one client can connect.&lt;/p&gt;

&lt;p&gt;An overview of the process is shown below:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;set up a new session with &lt;code class=&quot;highlighter-rouge&quot;&gt;startSession()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;takePicture&lt;/code&gt; using the &lt;code class=&quot;highlighter-rouge&quot;&gt;sessionId&lt;/code&gt; you just got from the new session&lt;/li&gt;
  &lt;li&gt;use the &lt;code class=&quot;highlighter-rouge&quot;&gt;fileUri&lt;/code&gt; you got from &lt;code class=&quot;highlighter-rouge&quot;&gt;takePicture&lt;/code&gt; to download the image with &lt;code class=&quot;highlighter-rouge&quot;&gt;getImage()&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;close the session with &lt;code class=&quot;highlighter-rouge&quot;&gt;closeSession()&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;
&lt;p&gt;Since the new THETA S supports Open Spherical Camera API, it’s now possible
to easily build applications. As sales and thus the popularity of the
camera appear to be going quite well, it seems likely that we’ll see
many interesting uses in the future.&lt;/p&gt;

&lt;p&gt;Personally, I’ve been thinking that since it may be difficult to turn the
WiFi on and off, start THETA applications, and perform repetitive tasks,
using a NFC tag might help with the automation. If I finish that,
I’ll write another post.&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Dec 2015 00:00:00 -0800</pubDate>
        <link>http://theta360developers.github.io/blog/javascript/2015/12/17/theta-s-nodejs.html</link>
        <guid isPermaLink="true">http://theta360developers.github.io/blog/javascript/2015/12/17/theta-s-nodejs.html</guid>
        
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>RICOH THETA Developer Community Services</title>
        <description>&lt;p&gt;The RICOH THETA S is an extremely exciting product. We’re at the beginning
of a larger movement for the general public to use 360 images and 360 videos.
Every week, I learn new things about what major companies are doing
with 360 images and videos. Facebook, YouTube, Google, The New York Times, are
just a few of many organizations that are now supporting 360 media.&lt;/p&gt;

&lt;p&gt;My colleague, Jesse Casman, and I are helping RICOH with technical
marketing activities in the US. Although, we are outside consultants,
we feel like we’re part of a much larger community that includes RICOH,
independent developers, enthusiasts, companies, and frankly, anyone
that thinks that 360 pictures and videos are cool.&lt;/p&gt;

&lt;p&gt;Although we are technical marketers, we’re super enthusiastic about
developers and even though we have limited resources, we’re are trying
to figure out what we can do to help. Feedback from developers is important. The services
are for you.&lt;/p&gt;

&lt;p&gt;Here is our plan to provide basic help to you with our limited resources and
limited technical knowledge.&lt;/p&gt;

&lt;h2 id=&quot;forumhttpsdeveloperstheta360comenforums&quot;&gt;&lt;a href=&quot;https://developers.theta360.com/en/forums/&quot;&gt;Forum&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Jesse and I will go into the forum and answer questions when  we can. For the
questions that we can’t answer, we’ll rely on the community. If the question
relates to a broad group of people, we will try and replicate the problem
and then report back to RICOH engineers. An example of a problem we’ll
escalate is a problem with an application due to changes in Adobe Air.&lt;/p&gt;

&lt;p&gt;There are certain requests for information that RICOH can’t provide. For example,
RICOH can’t release lens parameter information or stitching library algorithms.
For these questions, we will respond that RICOH can’t provide the information
and organize the requests so that RICOH managers have an understanding of
what the community is requesting.&lt;/p&gt;

&lt;h2 id=&quot;github-repository-managementhttpsgithubcomtheta360developers&quot;&gt;&lt;a href=&quot;https://github.com/theta360developers&quot;&gt;GitHub Repository Management&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We will organize code examples from the community. The examples cover both
the control of the camera as well as basic functionality such as viewing a
equirectangular image.&lt;/p&gt;

&lt;p&gt;Over time, we will either test the code ourselves or get help from the community
in testing the code. If the listing becomes too large, we will organize the
repositories into sub-directories and categories.&lt;/p&gt;

&lt;h2 id=&quot;bloghttptheta360developersgithubioblog&quot;&gt;&lt;a href=&quot;http://theta360developers.github.io/blog/&quot;&gt;Blog&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There’s a lot of great content out there about using the RICOH THETA S.
Some of it is in Japanese and a lot of it is in English.
The developer community in Japan is very active. Jesse can
read Japanese quickly and
I can struggle through it. We’ll combine content from Japan with
English content and provide articles in English about viewing and
streaming content, controlling the camera with the API and using
THETA products and media with other tools or services from companies
like Google, Facebook, Oculus, and Unity.&lt;/p&gt;

&lt;h2 id=&quot;community-guidehttptheta360developersgithubiocommunity-documentcommunityhtml&quot;&gt;&lt;a href=&quot;http://theta360developers.github.io/community-document/community.html&quot;&gt;Community Guide&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;We’re building a community guide based on questions and responses about the
most common topics. Hopefully, we’ll be able to pull popular topics from the blog.&lt;/p&gt;
</description>
        <pubDate>Tue, 15 Dec 2015 00:00:00 -0800</pubDate>
        <link>http://theta360developers.github.io/blog/community/2015/12/15/theta-s-community-assistance.html</link>
        <guid isPermaLink="true">http://theta360developers.github.io/blog/community/2015/12/15/theta-s-community-assistance.html</guid>
        
        
        <category>community</category>
        
      </item>
    
  </channel>
</rss>
